window.searchIndex = {"fields":["title","body"],"pipeline":["trimmer","stopWordFilter","stemmer"],"ref":"id","version":"0.9.5","index":{"body":{"root":{"docs":{},"df":0,"0":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":3.0},"http://pypy.info/rust-ownership/":{"tf":1.7320508075688772},"http://pypy.info/rust-parser-combinator/":{"tf":1.0}},"df":3,".":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":4.0}},"df":1},"1":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":1.4142135623730951}},"df":1},"2":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":1.0}},"df":1},"6":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":1.0}},"df":1},"7":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":1.4142135623730951}},"df":1},"8":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":1.0}},"df":1}},"2":{"docs":{},"df":0,"8":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":1.0}},"df":1}},"3":{"docs":{},"df":0,"4":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":1.0}},"df":1}},"4":{"docs":{},"df":0,"2":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":1.0}},"df":1},"5":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":1.0}},"df":1}}},"1":{"docs":{},"df":0,"4":{"docs":{},"df":0,"2":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":1.0}},"df":1}},"6":{"docs":{},"df":0,"8":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":1.0}},"df":1}}},"2":{"docs":{},"df":0,"0":{"docs":{},"df":0,"8":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":1.0}},"df":1}}},"7":{"docs":{},"df":0,"1":{"docs":{},"df":0,"3":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":1.0}},"df":1}}},"8":{"docs":{},"df":0,"3":{"docs":{},"df":0,"0":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":1.0}},"df":1}}}},"2":{"docs":{},"df":0,"6":{"docs":{},"df":0,"8":{"docs":{},"df":0,"8":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":1.0}},"df":1}}}},"3":{"docs":{},"df":0,"5":{"docs":{},"df":0,"0":{"docs":{},"df":0,"5":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":1.0}},"df":1}}}},"4":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":1.0}},"df":1},"6":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":1.0}},"df":1}}},"1":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":4.69041575982343},"http://pypy.info/rust-ownership/":{"tf":2.449489742783178},"http://pypy.info/rust-parser-combinator/":{"tf":1.7320508075688772},"http://pypy.info/rust-shared-mutability/":{"tf":1.0}},"df":4,".":{"docs":{},"df":0,".":{"docs":{},"df":0,"n":{"docs":{"http://pypy.info/rust-ownership/":{"tf":1.0}},"df":1}},"0":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":2.23606797749979}},"df":1},"6":{"docs":{},"df":0,"4":{"docs":{},"df":0,"8":{"docs":{},"df":0,"4":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":1.0}},"df":1}}}},"8":{"docs":{},"df":0,"0":{"docs":{},"df":0,"6":{"docs":{},"df":0,"5":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":1.0}},"df":1}}}}},"/":{"docs":{},"df":0,"5":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":2.0}},"df":1},"x":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":1.0}},"df":1}},"0":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":2.23606797749979},"http://pypy.info/rust-ownership/":{"tf":1.0}},"df":2,".":{"docs":{},"df":0,"3":{"docs":{},"df":0,"8":{"docs":{},"df":0,"2":{"docs":{},"df":0,"4":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":1.0}},"df":1}}}}},"0":{"docs":{"http://pypy.info/rust-parser-combinator/":{"tf":1.0}},"df":1},"2":{"docs":{},"df":0,"4":{"docs":{},"df":0,".":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":1.0}},"df":1}}}}}}},"9":{"docs":{},"df":0,"5":{"docs":{},"df":0,".":{"docs":{},"df":0,"1":{"docs":{},"df":0,"6":{"docs":{},"df":0,"7":{"docs":{},"df":0,"7":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":1.0}},"df":1}}}}}}}},"1":{"docs":{},"df":0,"5":{"docs":{},"df":0,"6":{"docs":{},"df":0,".":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":1.0}},"df":1}}}}}}}},"2":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":2.449489742783178}},"df":1,".":{"docs":{},"df":0,"4":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":1.0}},"df":1}}}}},"6":{"docs":{},"df":0,".":{"docs":{},"df":0,"0":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":2.23606797749979}},"df":1}}}},"4":{"docs":{},"df":0,".":{"docs":{},"df":0,"0":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":3.1622776601683795}},"df":1,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":1.0}},"df":1}}}}}},"5":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":1.7320508075688772}},"df":1,".":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":1.0}},"df":1}}}}}},"6":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,".":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":1.0}},"df":1}}}}}},"1":{"docs":{},"df":0,".":{"docs":{},"df":0,"8":{"docs":{},"df":0,"0":{"docs":{},"df":0,"6":{"docs":{},"df":0,"5":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":1.0}},"df":1}}}}}}}},"7":{"docs":{},"df":0,".":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":1.0}},"df":1}}}},"9":{"docs":{},"df":0,"9":{"docs":{},"df":0,"9":{"docs":{},"df":0,"9":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":1.0}},"df":1}}}}}},"8":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":1.4142135623730951}},"df":1,".":{"docs":{},"df":0,"0":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":2.23606797749979}},"df":1}},"x":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":1.4142135623730951}},"df":1}},"9":{"docs":{},"df":0,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"c":{"docs":{},"df":0,"d":{"docs":{"http://pypy.info/rust-parser-combinator/":{"tf":1.0}},"df":1}}}}}},"2":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":3.872983346207417},"http://pypy.info/rust-ownership/":{"tf":1.0},"http://pypy.info/rust-parser-combinator/":{"tf":1.7320508075688772},"http://pypy.info/rust-shared-mutability/":{"tf":1.0}},"df":4,".":{"docs":{},"df":0,"1":{"docs":{},"df":0,"0":{"docs":{},"df":0,"9":{"docs":{},"df":0,"0":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":1.0}},"df":1}}},"1":{"docs":{},"df":0,"1":{"docs":{},"df":0,"0":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":1.0}},"df":1}}},"2":{"docs":{},"df":0,"0":{"docs":{},"df":0,"9":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":1.0}},"df":1}},"1":{"docs":{},"df":0,"3":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":2.6457513110645907}},"df":1},"4":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":1.0}},"df":1}},"3":{"docs":{},"df":0,"4":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":1.0}},"df":1}}}}},"0":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":1.4142135623730951}},"df":1},"3":{"docs":{},"df":0,"0":{"docs":{},"df":0,"4":{"docs":{},"df":0,".":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":1.0}},"df":1},"7":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":1.0}},"df":1}}}}}}}},"5":{"docs":{},"df":0,"6":{"docs":{},"df":0,".":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":1.0}},"df":1}}}}}}},"8":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":1.0}},"df":1,".":{"docs":{},"df":0,"0":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":2.0}},"df":1,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":1.0}},"df":1}}}}}}},"3":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":3.0},"http://pypy.info/rust-shared-mutability/":{"tf":1.4142135623730951}},"df":2,".":{"docs":{},"df":0,"1":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":1.0}},"df":1}}}},"5":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":2.23606797749979}},"df":1,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":1.0}},"df":1}}}}},"1":{"docs":{},"df":0,"3":{"docs":{},"df":0,"6":{"docs":{},"df":0,".":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":1.4142135623730951}},"df":1}}}}}}}},"5":{"docs":{},"df":0,".":{"docs":{},"df":0,"6":{"docs":{},"df":0,"4":{"docs":{},"df":0,"9":{"docs":{},"df":0,"5":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":1.0}},"df":1}}}},"9":{"docs":{},"df":0,"8":{"docs":{},"df":0,"5":{"docs":{},"df":0,"8":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":1.0}},"df":1}}},"9":{"docs":{},"df":0,"9":{"docs":{},"df":0,"4":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":1.0}},"df":1}}}}}},"6":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":1.4142135623730951}},"df":1,".":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":1.4142135623730951}},"df":1},"1":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":1.0}},"df":1}},"2":{"docs":{},"df":0,"8":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":1.0}},"df":1}}},"7":{"docs":{},"df":0,"1":{"docs":{},"df":0,"3":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":1.0}},"df":1}}}}}},"9":{"docs":{},"df":0,"4":{"docs":{},"df":0,".":{"docs":{},"df":0,"1":{"docs":{},"df":0,"3":{"docs":{},"df":0,"9":{"docs":{},"df":0,"3":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":1.0}},"df":1}}}}}}},"f":{"docs":{},"df":0,"(":{"docs":{},"df":0,"x":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":1.4142135623730951}},"df":1}}}},"4":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":2.0}},"df":1,".":{"docs":{},"df":0,"0":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":2.23606797749979}},"df":1,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":1.0}},"df":1}}}},"5":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":2.23606797749979}},"df":1}},"0":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":1.7320508075688772}},"df":1,".":{"docs":{},"df":0,"8":{"docs":{},"df":0,"8":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":1.0}},"df":1}}}}},"9":{"docs":{},"df":0,"6":{"docs":{},"df":0,".":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":1.4142135623730951}},"df":1}}}}}}}}},"5":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":4.0}},"df":1,"1":{"docs":{},"df":0,"8":{"docs":{},"df":0,"4":{"docs":{},"df":0,".":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":1.4142135623730951}},"df":1}}}}}}}},"7":{"docs":{},"df":0,"6":{"docs":{},"df":0,".":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":1.0}},"df":1}}}}}}}},"6":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":2.0}},"df":1,".":{"docs":{},"df":0,"5":{"docs":{},"df":0,"9":{"docs":{},"df":0,"3":{"docs":{},"df":0,"5":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":1.0}},"df":1}}}},"6":{"docs":{},"df":0,"1":{"docs":{},"df":0,"7":{"docs":{},"df":0,"6":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":1.0}},"df":1}}}}},"0":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":1.4142135623730951}},"df":1,".":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":1.0}},"df":1}}}}}},"4":{"docs":{},"df":0,".":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":1.0}},"df":1}}}}}},"x":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":1.4142135623730951}},"df":1}},"7":{"docs":{},"df":0,"1":{"docs":{},"df":0,".":{"docs":{},"df":0,"1":{"docs":{},"df":0,"6":{"docs":{},"df":0,"7":{"docs":{},"df":0,"7":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":1.0}},"df":1}}}}}},"6":{"docs":{},"df":0,".":{"docs":{},"df":0,"8":{"docs":{},"df":0,"8":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":1.0}},"df":1}}}}}}},"8":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":2.449489742783178}},"df":1,".":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":2.449489742783178}},"df":1}},"4":{"docs":{},"df":0,"5":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":1.0}},"df":1}}}},"2":{"docs":{},"df":0,"7":{"docs":{},"df":0,"3":{"docs":{},"df":0,"3":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":1.0}},"df":1}}}},"4":{"docs":{},"df":0,"4":{"docs":{},"df":0,"3":{"docs":{},"df":0,"9":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":1.0}},"df":1}}},"8":{"docs":{},"df":0,"3":{"docs":{},"df":0,"6":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":1.0}},"df":1}},"5":{"docs":{},"df":0,"2":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":1.0}},"df":1},"3":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":2.449489742783178}},"df":1},"6":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":1.0}},"df":1}}},"9":{"docs":{},"df":0,"3":{"docs":{},"df":0,"7":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":1.0}},"df":1}}}}}},"9":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,".":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":1.0}},"df":1}}}}}}},"7":{"docs":{},"df":0,"0":{"docs":{},"df":0,".":{"docs":{},"df":0,"1":{"docs":{},"df":0,"3":{"docs":{},"df":0,"9":{"docs":{},"df":0,"3":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":1.0}},"df":1}}}}}}}},"a":{"docs":{},"df":0,".":{"docs":{},"df":0,"c":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"http://pypy.info/rust-ownership/":{"tf":1.0}},"df":1}}}}},"c":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{"http://pypy.info/rust-parser-combinator/":{"tf":1.0}},"df":1}}}}},"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,";":{"docs":{},"df":0,"'":{"docs":{},"df":0,"a":{"docs":{"http://pypy.info/rust-parser-combinator/":{"tf":1.0}},"df":1}},")":{"docs":{},"df":0,"和":{"docs":{},"df":0,"可":{"docs":{},"df":0,"变":{"docs":{},"df":0,"性":{"docs":{},"df":0,"引":{"docs":{},"df":0,"用":{"docs":{},"df":0,"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,";":{"docs":{},"df":0,"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"http://pypy.info/rust-borrow/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}},"a":{"docs":{"http://pypy.info/rust-ownership/":{"tf":2.6457513110645907}},"df":1},"i":{"docs":{"http://pypy.info/rust-parser-combinator/":{"tf":1.4142135623730951}},"df":1},"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"http://pypy.info/rust-borrow/":{"tf":1.4142135623730951}},"df":1,")":{"docs":{},"df":0,"，":{"docs":{},"df":0,"要":{"docs":{},"df":0,"么":{"docs":{},"df":0,"有":{"docs":{},"df":0,"任":{"docs":{},"df":0,"意":{"docs":{},"df":0,"数":{"docs":{},"df":0,"量":{"docs":{},"df":0,"的":{"docs":{},"df":0,"共":{"docs":{},"df":0,"享":{"docs":{},"df":0,"性":{"docs":{},"df":0,"引":{"docs":{},"df":0,"用":{"docs":{},"df":0,"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{"http://pypy.info/rust-borrow/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{"http://pypy.info/rust-borrow/":{"tf":1.0}},"df":1}}}}}}},"p":{"docs":{},"df":0,"i":{"docs":{"http://pypy.info/rust-shared-mutability/":{"tf":1.0}},"df":1}},"r":{"docs":{},"df":0,"c":{"docs":{"http://pypy.info/rust-ownership/":{"tf":2.23606797749979}},"df":1,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"t":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"http://pypy.info/rust-shared-mutability/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}},":":{"docs":{},"df":0,":":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"w":{"docs":{},"df":0,"(":{"docs":{},"df":0,"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"w":{"docs":{"http://pypy.info/rust-ownership/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}},"g":{"docs":{},"df":0,"u":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"http://pypy.info/rust-parser-combinator/":{"tf":1.0}},"df":1}}}}}}},"s":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"e":{"docs":{},"df":0,"q":{"docs":{},"df":0,"!":{"docs":{},"df":0,"(":{"docs":{},"df":0,"(":{"docs":{},"df":0,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"!":{"docs":{},"df":0,"(":{"docs":{},"df":0,"\"":{"docs":{},"df":0,"1":{"docs":{},"df":0,"9":{"docs":{},"df":0,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"c":{"docs":{},"df":0,"d":{"docs":{"http://pypy.info/rust-parser-combinator/":{"tf":1.0}},"df":1}}}}}},"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{"http://pypy.info/rust-parser-combinator/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}},"b":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":2.449489742783178},"http://pypy.info/rust-ownership/":{"tf":3.605551275463989}},"df":2,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"http://pypy.info/rust-parser-combinator/":{"tf":1.4142135623730951}},"df":1}}}},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{"http://pypy.info/rust-borrow/":{"tf":1.0},"http://pypy.info/rust-ownership/":{"tf":1.7320508075688772}},"df":2}}}}},"u":{"docs":{},"df":0,"g":{"docs":{"http://pypy.info/rust-borrow/":{"tf":1.0}},"df":1}},"，":{"docs":{},"df":0,"a":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":1.0}},"df":1}}},"c":{"docs":{"http://pypy.info/rust-ownership/":{"tf":1.0}},"df":1,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"http://pypy.info/rust-borrow/":{"tf":2.6457513110645907}},"df":1,"e":{"docs":{},"df":0,"。":{"docs":{},"df":0,"也":{"docs":{},"df":0,"就":{"docs":{},"df":0,"是":{"docs":{},"df":0,"说":{"docs":{},"df":0,"，":{"docs":{},"df":0,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"http://pypy.info/rust-borrow/":{"tf":1.0}},"df":1}}}}}}}}}}}}}},"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{"http://pypy.info/rust-borrow/":{"tf":1.4142135623730951},"http://pypy.info/rust-shared-mutability/":{"tf":2.23606797749979}},"df":2}}},"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{"http://pypy.info/rust-parser-combinator/":{"tf":1.4142135623730951}},"df":1}}}},"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{"http://pypy.info/rust-ownership/":{"tf":1.4142135623730951}},"df":1}}}},"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{"http://pypy.info/rust-parser-combinator/":{"tf":1.0}},"df":1}},"m":{"docs":{},"df":0,"b":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"http://pypy.info/rust-parser-combinator/":{"tf":3.1622776601683795}},"df":1}}}}}},"d":{"docs":{},"df":0,"*":{"docs":{},"df":0,"i":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":1.0}},"df":1}},"1":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":2.449489742783178}},"df":1},"2":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":2.449489742783178}},"df":1},"3":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":2.449489742783178}},"df":1},"_":{"docs":{},"df":0,"f":{"docs":{},"df":0,"(":{"docs":{},"df":0,"x":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":2.23606797749979}},"df":1}}},"h":{"docs":{},"df":0,"(":{"docs":{},"df":0,"x":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":3.0}},"df":1}},"_":{"docs":{},"df":0,"x":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":3.0}},"df":1}},"x":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":4.58257569495584}},"df":1}},"w":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":3.0}},"df":1}},"a":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":1.7320508075688772}},"df":1,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"l":{"docs":{"http://pypy.info/rust-borrow/":{"tf":1.0}},"df":1}}},"t":{"docs":{},"df":0,"a":{"docs":{"http://pypy.info/rust-borrow/":{"tf":1.0},"http://pypy.info/rust-ownership/":{"tf":3.3166247903554},"http://pypy.info/rust-parser-combinator/":{"tf":1.0}},"df":3,".":{"docs":{},"df":0,"c":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"http://pypy.info/rust-ownership/":{"tf":1.0}},"df":1}}}}},"_":{"docs":{},"df":0,"x":{"docs":{"http://pypy.info/rust-ownership/":{"tf":1.4142135623730951}},"df":1}}}}},"b":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":1.7320508075688772}},"df":1},"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":1.0}},"df":1}}},"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"http://pypy.info/rust-parser-combinator/":{"tf":1.0}},"df":1}}}},"s":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"http://pypy.info/rust-parser-combinator/":{"tf":1.0}},"df":1}}}}}},"n":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":1.7320508075688772}},"df":1},"o":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"(":{"docs":{},"df":0,"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"_":{"docs":{},"df":0,"x":{"docs":{"http://pypy.info/rust-ownership/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}},"w":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":4.123105625617661}},"df":1,"1":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":4.358898943540674}},"df":1,":":{"docs":{},"df":0,"3":{"docs":{},"df":0,".":{"docs":{},"df":0,"5":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":2.23606797749979}},"df":1}}}}},"2":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":5.0}},"df":1},"。":{"docs":{},"df":0,"即":{"docs":{},"df":0,"：":{"docs":{},"df":0,"d":{"docs":{},"df":0,"w":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":1.0}},"df":1}}}}}},"x":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":1.7320508075688772}},"df":1},"y":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":4.0}},"df":1,"n":{"docs":{"http://pypy.info/rust-parser-combinator/":{"tf":1.0}},"df":1}}},"e":{"docs":{"http://pypy.info/rust-parser-combinator/":{"tf":1.4142135623730951}},"df":1,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"http://pypy.info/rust-parser-combinator/":{"tf":2.0}},"df":1}}},"n":{"docs":{},"df":0,"d":{"docs":{"http://pypy.info/rust-ownership/":{"tf":1.0}},"df":1}},"x":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"http://pypy.info/rust-parser-combinator/":{"tf":1.0}},"df":1}}}}}}},"f":{"docs":{},"df":0,"(":{"docs":{},"df":0,"2":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":1.4142135623730951}},"df":1},"x":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":5.477225575051661}},"df":1}},"n":{"docs":{"http://pypy.info/rust-parser-combinator/":{"tf":1.0}},"df":1},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"/":{"docs":{},"df":0,"w":{"docs":{},"df":0,"h":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{"http://pypy.info/rust-parser-combinator/":{"tf":1.0}},"df":1}}}}}}},"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"http://pypy.info/rust-parser-combinator/":{"tf":1.4142135623730951}},"df":1}}}}}}}},"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"http://pypy.info/rust-parser-combinator/":{"tf":2.0}},"df":1}}}},"i":{"docs":{},"df":0,"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"http://pypy.info/rust-borrow/":{"tf":1.0},"http://pypy.info/rust-shared-mutability/":{"tf":1.0}},"df":2}}}},"o":{"docs":{"http://pypy.info/rust-parser-combinator/":{"tf":1.0}},"df":1},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"http://pypy.info/rust-parser-combinator/":{"tf":1.0}},"df":1}}}},"p":{"docs":{},"df":0,"h":{"docs":{"http://pypy.info/rust-shared-mutability/":{"tf":1.4142135623730951}},"df":1}}}},"t":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":1.0},"http://pypy.info/rust-parser-combinator/":{"tf":1.0}},"df":2}},"h":{"docs":{},"df":0,"(":{"docs":{},"df":0,"2":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":1.4142135623730951}},"df":1},"x":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":5.291502622129181}},"df":1}},"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"h":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{"http://pypy.info/rust-shared-mutability/":{"tf":1.0}},"df":1,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"k":{"docs":{"http://pypy.info/rust-shared-mutability/":{"tf":1.7320508075688772}},"df":1}}}}}}}}},"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{"http://pypy.info/rust-borrow/":{"tf":1.0}},"df":1}}}}},"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{"http://pypy.info/rust-parser-combinator/":{"tf":1.4142135623730951}},"df":1}}}}},"i":{"docs":{},"df":0,"m":{"docs":{},"df":0,"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"http://pypy.info/rust-borrow/":{"tf":1.4142135623730951},"http://pypy.info/rust-shared-mutability/":{"tf":1.0}},"df":2}}},"p":{"docs":{},"df":0,"l":{"docs":{"http://pypy.info/rust-parser-combinator/":{"tf":1.0}},"df":1}}},"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{"http://pypy.info/rust-shared-mutability/":{"tf":1.4142135623730951}},"df":1}}},"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"http://pypy.info/rust-borrow/":{"tf":1.0}},"df":1}}},"p":{"docs":{"http://pypy.info/rust-parser-combinator/":{"tf":1.4142135623730951}},"df":1,"u":{"docs":{},"df":0,"t":{"docs":{"http://pypy.info/rust-parser-combinator/":{"tf":1.0}},"df":1}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"f":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{"http://pypy.info/rust-parser-combinator/":{"tf":1.0}},"df":1}}},"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"http://pypy.info/rust-borrow/":{"tf":1.4142135623730951},"http://pypy.info/rust-shared-mutability/":{"tf":1.4142135623730951}},"df":2}}}}}},"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{"http://pypy.info/rust-parser-combinator/":{"tf":1.0}},"df":1}}}}}},"j":{"docs":{},"df":0,"s":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"http://pypy.info/rust-parser-combinator/":{"tf":3.1622776601683795}},"df":1}}}},"k":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":3.1622776601683795}},"df":1,"1":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":1.0}},"df":1},"2":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":1.0}},"df":1},"3":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":1.0}},"df":1},"e":{"docs":{},"df":0,"y":{"docs":{"http://pypy.info/rust-borrow/":{"tf":1.0},"http://pypy.info/rust-shared-mutability/":{"tf":1.7320508075688772}},"df":2}}},"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"n":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"_":{"docs":{},"df":0,"r":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":2.0}},"df":1}}}}}}}}},"i":{"docs":{},"df":0,"f":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"m":{"docs":{"http://pypy.info/rust-ownership/":{"tf":1.7320508075688772}},"df":1}}}}},"t":{"docs":{"http://pypy.info/rust-parser-combinator/":{"tf":1.0}},"df":1,"(":{"docs":{},"df":0,"\"":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{"http://pypy.info/rust-parser-combinator/":{"tf":1.0}},"df":1}}}}}}},"e":{"docs":{},"df":0,"r":{"docs":{"http://pypy.info/rust-parser-combinator/":{"tf":1.0}},"df":1}}}},"t":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":1.4142135623730951}},"df":1}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"k":{"docs":{},"df":0,"e":{"docs":{"http://pypy.info/rust-parser-combinator/":{"tf":1.4142135623730951}},"df":1}},"t":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"http://pypy.info/rust-parser-combinator/":{"tf":1.0}},"df":1}}}},"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{"http://pypy.info/rust-borrow/":{"tf":1.0}},"df":1}}}}},"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"http://pypy.info/rust-borrow/":{"tf":1.4142135623730951}},"df":1}}},"o":{"docs":{},"df":0,"v":{"docs":{},"df":0,"e":{"docs":{"http://pypy.info/rust-ownership/":{"tf":1.7320508075688772}},"df":1}}},"u":{"docs":{},"df":0,"t":{"docs":{"http://pypy.info/rust-borrow/":{"tf":2.0}},"df":1,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"y":{"docs":{},"df":0,")":{"docs":{},"df":0,"。":{"docs":{},"df":0,"其":{"docs":{},"df":0,"实":{"docs":{},"df":0,"它":{"docs":{},"df":0,"的":{"docs":{},"df":0,"真":{"docs":{},"df":0,"正":{"docs":{},"df":0,"意":{"docs":{},"df":0,"思":{"docs":{},"df":0,"是":{"docs":{},"df":0,"：":{"docs":{},"df":0,"共":{"docs":{},"df":0,"享":{"docs":{},"df":0,"可":{"docs":{},"df":0,"变":{"docs":{},"df":0,"性":{"docs":{},"df":0,"(":{"docs":{},"df":0,"s":{"docs":{},"df":0,"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"http://pypy.info/rust-borrow/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{"http://pypy.info/rust-borrow/":{"tf":2.0},"http://pypy.info/rust-shared-mutability/":{"tf":1.7320508075688772}},"df":2}}},"e":{"docs":{},"df":0,"x":{"docs":{"http://pypy.info/rust-borrow/":{"tf":1.0}},"df":1}}}}},"n":{"docs":{"http://pypy.info/rust-ownership/":{"tf":2.0}},"df":1,"e":{"docs":{},"df":0,"w":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":6.324555320336759}},"df":1}},"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{"http://pypy.info/rust-shared-mutability/":{"tf":1.7320508075688772}},"df":1}}},"u":{"docs":{},"df":0,"m":{"docs":{},"df":0,"b":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"http://pypy.info/rust-borrow/":{"tf":1.0},"http://pypy.info/rust-shared-mutability/":{"tf":1.0}},"df":2}}}}}},"o":{"docs":{"http://pypy.info/rust-parser-combinator/":{"tf":2.23606797749979}},"df":1,"1":{"docs":{"http://pypy.info/rust-parser-combinator/":{"tf":1.0}},"df":1},"2":{"docs":{"http://pypy.info/rust-parser-combinator/":{"tf":1.0}},"df":1},"n":{"docs":{"http://pypy.info/rust-borrow/":{"tf":1.0},"http://pypy.info/rust-shared-mutability/":{"tf":1.0}},"df":2},"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"g":{"docs":{},"df":0,"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":3.0}},"df":1}}}}},"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"u":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":3.0}},"df":1}}}},"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":1.4142135623730951}},"df":1}}}}},"w":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"http://pypy.info/rust-ownership/":{"tf":2.449489742783178}},"df":1,"s":{"docs":{},"df":0,"h":{"docs":{},"df":0,"i":{"docs":{},"df":0,"p":{"docs":{"http://pypy.info/rust-ownership/":{"tf":2.0},"http://pypy.info/rust-shared-mutability/":{"tf":1.4142135623730951}},"df":2}}}}}}}}},"p":{"docs":{},"df":0,"(":{"docs":{},"df":0,"x":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":3.1622776601683795}},"df":1}},"1":{"docs":{"http://pypy.info/rust-parser-combinator/":{"tf":2.6457513110645907}},"df":1},"2":{"docs":{"http://pypy.info/rust-parser-combinator/":{"tf":1.7320508075688772}},"df":1},"a":{"docs":{},"df":0,"r":{"docs":{"http://pypy.info/rust-parser-combinator/":{"tf":1.4142135623730951}},"df":1,".":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"(":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"p":{"docs":{},"df":0,")":{"docs":{},"df":0,".":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"w":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{"http://pypy.info/rust-parser-combinator/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}}}}}}}},"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"b":{"docs":{"http://pypy.info/rust-parser-combinator/":{"tf":2.0}},"df":1,"，":{"docs":{},"df":0,"2":{"docs":{"http://pypy.info/rust-parser-combinator/":{"tf":1.0}},"df":1}}}}}},"s":{"docs":{"http://pypy.info/rust-parser-combinator/":{"tf":3.0}},"df":1,"e":{"docs":{},"df":0,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"'":{"docs":{},"df":0,"a":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,";":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{"http://pypy.info/rust-parser-combinator/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}},"r":{"docs":{"http://pypy.info/rust-parser-combinator/":{"tf":8.18535277187245}},"df":1,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"i":{"docs":{"http://pypy.info/rust-parser-combinator/":{"tf":1.0}},"df":1}}}}},"a":{"docs":{"http://pypy.info/rust-parser-combinator/":{"tf":1.0}},"df":1},"b":{"docs":{"http://pypy.info/rust-parser-combinator/":{"tf":1.0}},"df":1},"c":{"docs":{"http://pypy.info/rust-parser-combinator/":{"tf":1.0}},"df":1},"d":{"docs":{"http://pypy.info/rust-parser-combinator/":{"tf":1.0}},"df":1},"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"&":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,";":{"docs":{},"df":0,"'":{"docs":{},"df":0,"a":{"docs":{"http://pypy.info/rust-parser-combinator/":{"tf":1.0}},"df":1}}}}}}},"i":{"docs":{"http://pypy.info/rust-parser-combinator/":{"tf":1.0}},"df":1}}}}}}}}}},"f":{"docs":{"http://pypy.info/rust-parser-combinator/":{"tf":1.0}},"df":1},"。":{"docs":{},"df":0,"如":{"docs":{},"df":0,"接":{"docs":{},"df":0,"受":{"docs":{},"df":0,"：":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{"http://pypy.info/rust-parser-combinator/":{"tf":1.0}},"df":1}}}}}}}}}}}},"t":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"n":{"docs":{"http://pypy.info/rust-borrow/":{"tf":1.0},"http://pypy.info/rust-parser-combinator/":{"tf":1.0}},"df":2}}}}}},"e":{"docs":{},"df":0,"g":{"docs":{"http://pypy.info/rust-parser-combinator/":{"tf":1.4142135623730951}},"df":1,"(":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{"http://pypy.info/rust-parser-combinator/":{"tf":1.0}},"df":1}}}}}}},"o":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"http://pypy.info/rust-borrow/":{"tf":1.0},"http://pypy.info/rust-shared-mutability/":{"tf":2.0}},"df":2}}}}},"s":{"docs":{},"df":0,"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"http://pypy.info/rust-parser-combinator/":{"tf":1.4142135623730951}},"df":1}}}}}},"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":1.0},"http://pypy.info/rust-parser-combinator/":{"tf":1.0}},"df":2}}},"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{"http://pypy.info/rust-parser-combinator/":{"tf":1.0}},"df":1}}}}}}},"u":{"docs":{},"df":0,"b":{"docs":{"http://pypy.info/rust-parser-combinator/":{"tf":1.4142135623730951}},"df":1}},"y":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":1.0},"http://pypy.info/rust-ownership/":{"tf":1.0}},"df":2}}}}}},"q":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":3.0}},"df":1},"r":{"docs":{},"df":0,"\"":{"docs":{},"df":0,"\\":{"docs":{},"df":0,"d":{"docs":{},"df":0,"{":{"docs":{},"df":0,"2":{"docs":{},"df":0,"}":{"docs":{},"df":0,"\\":{"docs":{},"df":0,"w":{"docs":{"http://pypy.info/rust-parser-combinator/":{"tf":1.0}},"df":1}}}}}}}},"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{"http://pypy.info/rust-borrow/":{"tf":1.0}},"df":1}},"w":{"docs":{"http://pypy.info/rust-shared-mutability/":{"tf":2.0}},"df":1}},"c":{"docs":{"http://pypy.info/rust-ownership/":{"tf":1.7320508075688772},"http://pypy.info/rust-shared-mutability/":{"tf":1.0}},"df":2,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"t":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"http://pypy.info/rust-shared-mutability/":{"tf":2.23606797749979}},"df":1}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"http://pypy.info/rust-shared-mutability/":{"tf":1.0}},"df":1}}}}}}}},"/":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"c":{"docs":{"http://pypy.info/rust-ownership/":{"tf":1.0}},"df":1}}}},":":{"docs":{},"df":0,":":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"w":{"docs":{},"df":0,"(":{"docs":{},"df":0,"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"w":{"docs":{"http://pypy.info/rust-ownership/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}},"e":{"docs":{"http://pypy.info/rust-parser-combinator/":{"tf":2.0}},"df":1,"c":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{"http://pypy.info/rust-parser-combinator/":{"tf":1.0}},"df":1}}}},"f":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"t":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"http://pypy.info/rust-shared-mutability/":{"tf":1.0}},"df":1}}}}}}}}}}}},"e":{"docs":{},"df":0,"r":{"docs":{"http://pypy.info/rust-borrow/":{"tf":1.7320508075688772},"http://pypy.info/rust-shared-mutability/":{"tf":2.23606797749979}},"df":2,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{"http://pypy.info/rust-shared-mutability/":{"tf":1.0}},"df":1}}}}}}}}}}}},"g":{"docs":{"http://pypy.info/rust-parser-combinator/":{"tf":1.4142135623730951}},"df":1,"(":{"docs":{},"df":0,"r":{"docs":{},"df":0,"\"":{"docs":{},"df":0,"\\":{"docs":{},"df":0,"d":{"docs":{},"df":0,"{":{"docs":{},"df":0,"2":{"docs":{},"df":0,"}":{"docs":{},"df":0,"\\":{"docs":{},"df":0,"w":{"docs":{"http://pypy.info/rust-parser-combinator/":{"tf":1.0}},"df":1}}}}}}}}}},"e":{"docs":{},"df":0,"x":{"docs":{"http://pypy.info/rust-parser-combinator/":{"tf":1.7320508075688772}},"df":1}}},"s":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"(":{"docs":{},"df":0,"o":{"docs":{"http://pypy.info/rust-parser-combinator/":{"tf":1.0}},"df":1}}}}}}}}}},"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"n":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":1.4142135623730951},"http://pypy.info/rust-parser-combinator/":{"tf":1.4142135623730951}},"df":2}}}}},"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"m":{"docs":{"http://pypy.info/rust-ownership/":{"tf":1.0}},"df":1}}}},"s":{"docs":{},"df":0,"t":{"docs":{"http://pypy.info/rust-borrow/":{"tf":2.449489742783178},"http://pypy.info/rust-ownership/":{"tf":3.3166247903554},"http://pypy.info/rust-parser-combinator/":{"tf":3.1622776601683795},"http://pypy.info/rust-shared-mutability/":{"tf":1.7320508075688772}},"df":4}}}},"s":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{"http://pypy.info/rust-parser-combinator/":{"tf":1.0}},"df":1}}}},"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{"http://pypy.info/rust-ownership/":{"tf":1.4142135623730951}},"df":1}}}},"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{"http://pypy.info/rust-borrow/":{"tf":1.0}},"df":1}},"n":{"docs":{},"df":0,"s":{"docs":{"http://pypy.info/rust-parser-combinator/":{"tf":1.0}},"df":1}}},"h":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{"http://pypy.info/rust-parser-combinator/":{"tf":1.0}},"df":1}}},"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"http://pypy.info/rust-parser-combinator/":{"tf":1.0}},"df":1}}}}}},"z":{"docs":{},"df":0,"e":{"docs":{"http://pypy.info/rust-parser-combinator/":{"tf":1.0}},"df":1}}},"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{"http://pypy.info/rust-ownership/":{"tf":1.0}},"df":1}}}}},"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{},"df":0,"f":{"docs":{"http://pypy.info/rust-parser-combinator/":{"tf":1.0}},"df":1}}}}},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{"http://pypy.info/rust-ownership/":{"tf":1.0}},"df":1}}},"r":{"docs":{"http://pypy.info/rust-parser-combinator/":{"tf":1.0}},"df":1,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{"http://pypy.info/rust-parser-combinator/":{"tf":1.4142135623730951}},"df":1}}},"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"http://pypy.info/rust-parser-combinator/":{"tf":1.7320508075688772}},"df":1}}},"，":{"docs":{},"df":0,"b":{"docs":{},"df":0,"y":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{"http://pypy.info/rust-parser-combinator/":{"tf":1.0}},"df":1}}}}}}},"u":{"docs":{},"df":0,"g":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"http://pypy.info/rust-parser-combinator/":{"tf":1.0}},"df":1}}}}}}},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"k":{"docs":{"http://pypy.info/rust-parser-combinator/":{"tf":1.4142135623730951}},"df":1}}},"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":1.4142135623730951}},"df":1}}},"h":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"k":{"docs":{"http://pypy.info/rust-parser-combinator/":{"tf":1.0}},"df":1}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"w":{"docs":{},"df":0,"n":{"docs":{},"df":0,"(":{"docs":{},"df":0,"m":{"docs":{},"df":0,"o":{"docs":{},"df":0,"v":{"docs":{"http://pypy.info/rust-ownership/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}},"i":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{"http://pypy.info/rust-borrow/":{"tf":1.0},"http://pypy.info/rust-shared-mutability/":{"tf":1.0}},"df":2}}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"http://pypy.info/rust-parser-combinator/":{"tf":3.4641016151377544}},"df":1}}}},"y":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{"http://pypy.info/rust-parser-combinator/":{"tf":2.449489742783178}},"df":1}}}},"u":{"docs":{},"df":0,"8":{"docs":{"http://pypy.info/rust-parser-combinator/":{"tf":1.0}},"df":1},"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"a":{"docs":{},"df":0,"f":{"docs":{"http://pypy.info/rust-shared-mutability/":{"tf":1.4142135623730951}},"df":1,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{"http://pypy.info/rust-shared-mutability/":{"tf":1.7320508075688772}},"df":1}}}}}},"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"http://pypy.info/rust-borrow/":{"tf":1.0}},"df":1}}}}}},"v":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":2.23606797749979}},"df":1,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"http://pypy.info/rust-shared-mutability/":{"tf":1.7320508075688772}},"df":1}}},"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{"http://pypy.info/rust-borrow/":{"tf":1.0},"http://pypy.info/rust-shared-mutability/":{"tf":1.0}},"df":2}}},"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"http://pypy.info/rust-shared-mutability/":{"tf":1.0}},"df":1}}}}}},"w":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":8.0}},"df":1,"0":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":1.4142135623730951}},"df":1},"1":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":7.0710678118654755}},"df":1},"2":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":6.557438524302}},"df":1,"，":{"docs":{},"df":0,"在":{"docs":{},"df":0,"正":{"docs":{},"df":0,"确":{"docs":{},"df":0,"答":{"docs":{},"df":0,"案":{"docs":{},"df":0,"中":{"docs":{},"df":0,"，":{"docs":{},"df":0,"w":{"docs":{},"df":0,"1":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":1.0}},"df":1}}}}}}}}}}},"3":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":1.0}},"df":1},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"l":{"docs":{},"df":0,"d":{"docs":{"http://pypy.info/rust-parser-combinator/":{"tf":1.4142135623730951}},"df":1}}}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"http://pypy.info/rust-ownership/":{"tf":1.0},"http://pypy.info/rust-shared-mutability/":{"tf":1.0}},"df":2}}}}}}},"x":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":5.385164807134504}},"df":1},"y":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":3.872983346207417}},"df":1,"_":{"docs":{},"df":0,"g":{"docs":{},"df":0,"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":2.6457513110645907}},"df":1}}}}},"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"e":{"docs":{"http://pypy.info/differentiable-programming/":{"tf":1.4142135623730951}},"df":1}}}}}}}},"title":{"root":{"docs":{},"df":0,"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{"http://pypy.info/rust-borrow/":{"tf":1.0}},"df":1}}}}}},"j":{"docs":{},"df":0,"s":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"http://pypy.info/rust-parser-combinator/":{"tf":1.0}},"df":1}}}},"o":{"docs":{},"df":0,"w":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,"h":{"docs":{},"df":0,"i":{"docs":{},"df":0,"p":{"docs":{"http://pypy.info/rust-ownership/":{"tf":1.0}},"df":1}}}}}}}}},"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"http://pypy.info/rust-parser-combinator/":{"tf":1.0}},"df":1}}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"http://pypy.info/rust-borrow/":{"tf":1.0}},"df":1}}}},"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"http://pypy.info/rust-borrow/":{"tf":1.0},"http://pypy.info/rust-ownership/":{"tf":1.4142135623730951},"http://pypy.info/rust-parser-combinator/":{"tf":1.0},"http://pypy.info/rust-shared-mutability/":{"tf":1.0}},"df":4}}}}}}},"documentStore":{"save":true,"docs":{"http://pypy.info/":{"body":"","id":"http://pypy.info/","title":""},"http://pypy.info/differentiable-programming/":{"body":"得到一个程序有两种方式，其一是由程序员来编写它，其二是通过大量数据来拟合它。也就是所谓的编程和机器学习。\n当我们在编程的时候，我们是在编写整个程序。当我们在机器学习的时候，我们在编写半个程序，剩下的部分，通过数据来拟合而得。\n数据拟合，即通过数据，来反推这个产生这批数据的规律，这个规律相当于代码。\n人脑的规则，和数据的规律，融合成一起，成为最终的程序。\n现在问题来了，如何通过数据反推规律？\n答案就在 “学习” 二字之中。\n所谓学习，就是不断尝试，不断犯错，不断调整，直至不出错。\n所谓机器学习，就是机器通过不断尝试，不断犯错，不断调整，直至不出错。\n这个尝试，反馈，调整的回路，怎么搭建？\n对于一个程序，哪些部分需要学习，哪些部分需要硬编码？\n让我们从一个常量开始。\n比如说，数字 5。\n显然，常量没有任何变化可言，是个硬编码。\n现在，我们来让这个常量产生变化的可能性，让它乘以一个变量 w。\nw * 5\n\n大功告成，世界上最简单的机器学习程序写好了。5 是人编写的，w 是未知的，需要通过机器学习而得到。\n下一步，我们需要发明一种机制，来不断调整这个 w：\nw = w - dw\n\ndw 就是 delta w，也就是 w 的变化 的意思。 w = w - dw 就是调整 w。\n下一步，我们需要确定这个  dw 。\n观察我们的程序 w * 5，它的意思是 w 的任何变化，都会被放大 5 倍。\n假如我们把输出记为 y，那么 dy = 5 * dw。即：dw = dy / 5。\n有了这个关系，当我们知道了 dy, 就等于知道了 dw，就等于知道了新的 w。\n那么，如何知道 dy？\n既然 y 是我们的输出，那么输出的误差，就是 y 需要调整的变化，即 dy：\ndy = y_guess - y_true\n\n其中 y_true 就是我们的数据（学习源），y_guess 是一次尝试的输出。y_guess = w * 5 ，随 w 的变化而变化。\n现在只差最后一步，我们就可以跑通这个流程了。这个最后一步是，w 的初始值怎么设置？\n答案很简单，给个随机数就好了，反正它会被自动调节。\n现在，我们用真实数据测试一下这个流程：\n# --- test 1 ---\ny = 15  # 正确答案, 即 w = 3\nw = w0 = 2  # 随机初始化 w 为 2\ny_guess = w * 5  # 2 * 5 = 10\ndy = y_guess - y  # 10 - 15 = -5\ndw = 1/5 * dy  # 1/5 * -5 = -1\nw = w - dw  # 2 - (-1) = 3  &lt;-- w = 3, y = 15 成功学习到 w = 3\n\n\n# --- test 2 ---\ny = 40  # 正确答案, 即 w = 8\nw = w0 = 12  # 随机初始化 w 为 12\ny_guess = w * 5  # 12 * 5 = 60\ndy = y_guess - y  # 60 - 40 = 20\ndw = 1/5 * dy  # 1/5 * 20 = 4\nw = w - dw  # 12 - 4 = 8  &lt;-- w = 8, y = 40 成功学习到 w = 8\n\n我们从一个特例常量 5 开始，通过 w * 5 来推演这个机器学习的过程。其实把常量换成变量 x，上述的推演同样成立，也就是 y = w * x,  因为 w 的微小变化会被放大 x倍，所以  dy = dw * x,  dw = 1/x * d*y。通过特定的的 (x, y) 数据作为学习源，重复上述步骤，可得到正确的 w。\n现在，我们研究出了怎么把变量和常量参数化，并且通过数据学习这个参数的技术。接下来我们更进一步：既然常量和变量都可以参数化，那么函数可不可以参数化？如果这个函数也是一个需要学习的函数呢？\nh(x) = w1 * f(x)  # 参数化函数\nf(x) = w2 * x  # 参数化变量\n\n我们能同时学习得到 w1 和 w2 吗？\n照着刚才的思路，我们需要先考察 dw1 和 dw2 。\n对 dw1, 由 w1 * f(x) 可知 w1 的微小变化会被放大 f(x) 倍，所以 d_h(x) =  dw1 * f(x)。\n对 dw2, 由 w2 * x 可知 w2 的微小变化会被放大 x 倍，所以 d_f(x) = dw2 * x； 又由 w1 * f(x) 可知，f(x) 的微小变化会被放大 w1 倍，所以 d_h(x)  = d_f(x) * w1。合并起来就是: d_h(x) = d_f(x) * w1 = (dw2 * x) * w1 ，所以：\ndw1 = d_h(x) / f(x) = d_h(x) / (w2 * x)\ndw2 = d_h(x) / w1 / x  # 先除以 w1，再除以 x\n\n我们按刚才的思路试一下：\n--- 数据\n设 w1 = 3, w2 = 6, x = 2, 则 f(x) = 6x, h(x) = 3f(x) = 18x\nf(2) = 12, h(2) = 36\n\n--- 随机初始化 w1, w2\nw1 = 1, w2 = 4\n\n--- 调整 10 个循环，结果如下：---\nd_hx = -28, dw1:-3.5, dw2: -14.0, new w1: 4.5, new w2: 18.0\nd_hx = 126.0, dw1:3.5, dw2: 14.0, new w1: 1.0, new w2: 4.0\nd_hx = -28.0, dw1:-3.5, dw2: -14.0, new w1: 4.5, new w2: 18.0\nd_hx = 126.0, dw1:3.5, dw2: 14.0, new w1: 1.0, new w2: 4.0\nd_hx = -28.0, dw1:-3.5, dw2: -14.0, new w1: 4.5, new w2: 18.0\nd_hx = 126.0, dw1:3.5, dw2: 14.0, new w1: 1.0, new w2: 4.0\nd_hx = -28.0, dw1:-3.5, dw2: -14.0, new w1: 4.5, new w2: 18.0\nd_hx = 126.0, dw1:3.5, dw2: 14.0, new w1: 1.0, new w2: 4.0\nd_hx = -28.0, dw1:-3.5, dw2: -14.0, new w1: 4.5, new w2: 18.0\nd_hx = 126.0, dw1:3.5, dw2: 14.0, new w1: 1.0, new w2: 4.0\n\n显然，我们遇到了新问题：无论如何调整， w1 和 w2 只是在不停地来回震荡，无法学习到正确的值。\n问题出在哪里？\n问题不在于来回震荡，问题在于震荡幅度每次都一样大，使得这个震荡停不下来。一个钟摆来回摇摆，只要摆动幅度逐渐变小，那么它最终就会停下来。\n所以灵感来了，让我们把震荡幅度每次都变小一点。从数学上表达：\nw = w - dw * learning_rate\n\n这个 learning_rate 原本是 1 被我们忽略掉了，当我们取一个大于 0 小于 1 的值时，震荡的幅度就会越来越小。\n现在，取 learning_rate = 0.6 试试：\n--- 数据\n设 w1 = 3, w2 = 6, x = 2, 则 f(x) = 6x, h(x) = 3f(x) = 18x\nf(2) = 12, h(2) = 36\n\n--- 随机初始化 w1, w2\nw1 = 1, w2 = 4\n\n--- 调整 10 个循环，结果如下：---\nh(x) =  8.0000, d_hx = -28.0000, dw1:-3.5000, dw2: -14.0000, new w1:  3.1000, new w2:  12.4000\nh(x) =  76.8800, d_hx =  40.8800, dw1: 1.6484, dw2:  6.5935, new w1:  2.1110, new w2:  8.4439\nh(x) =  35.6495, d_hx = -0.3505, dw1:-0.0208, dw2: -0.0830, new w1:  2.1234, new w2:  8.4937\nh(x) =  36.0713, d_hx =  0.0713, dw1: 0.0042, dw2:  0.0168, new w1:  2.1209, new w2:  8.4836\nh(x) =  35.9858, d_hx = -0.0142, dw1:-0.0008, dw2: -0.0034, new w1:  2.1214, new w2:  8.4856\nh(x) =  36.0028, d_hx =  0.0028, dw1: 0.0002, dw2:  0.0007, new w1:  2.1213, new w2:  8.4852\nh(x) =  35.9994, d_hx = -0.0006, dw1:-0.0000, dw2: -0.0001, new w1:  2.1213, new w2:  8.4853\nh(x) =  36.0001, d_hx =  0.0001, dw1: 0.0000, dw2:  0.0000, new w1:  2.1213, new w2:  8.4853\nh(x) =  36.0000, d_hx = -0.0000, dw1:-0.0000, dw2: -0.0000, new w1:  2.1213, new w2:  8.4853\nh(x) =  36.0000, d_hx =  0.0000, dw1: 0.0000, dw2:  0.0000, new w1:  2.1213, new w2:  8.4853\n\n成功了吗？\nd_hx 也就是误差的确逐步降低到 0，可是学到的 w1 = 2.1213, w2 = 8.4853 ，而我们正确答案是 w1 = 3, w2 = 6。怎么对不上呢？\n细心分析下发现， h(x) = w1 * f(x) = w1 * w2 * x  = (w1 * w2) * x ，我们通过 h(x) 的误差来学习整个函数的表示，学到的是一个整体的结果，也就是 w1 * w2，在正确答案中，w1 * w2  = 3 * 6 = 18， 我们的实验结果：\nw1 * w2 = 2.1213 * 8.4853 = 17.9999 ~= 18 也是对的。\n也就是说，我们无意中得到了一个因式分解器，因 w1, w2 的初始值不同，我们学习得到不同的参数，这些参数结果对 h(x) 来说，效果都是一样的。有兴趣可以试试。\n现在来总结一下机器学习程序的几个要素：\n\n参数化，使得学习成为可能\n计算输出误差，并且根据输出误差反推参数误差\n根据参数误差更新参数\n重复 1-3 步\n\n目前为止我们的探索集中在第一步参数化。其实对于一个机器学习程序来说，哪些部分需要学习（参数化），哪些部分不需要学习（单纯进行数据变换）应该是很自由的事情，否则就编写不出灵活的程序。对于不需要学习，只是单纯做数据变换的部分，我们只需要保证在反推参数误差时，正确地传递这些误差信息就可以了。\n说得有些抽象，下面举个例子。比方说：\nh(x) = f(x) ^ 2\nf(x) = w * x\n\nh(x) 是 f(x) 的平方。在这里 h(x) 只是针对 f(x) 的结果做了一个变换（平方），没有任何需要学习的参数。但是，f(x) 是一个需要学习的函数，里边有参数 w。\n要学习 w，我们需要知道 dw；要知道 dw，我们需要知道 d_h(x) 和 dw 的关系。\n我们先不着急找这个关系，先来分析一个更加基本的问题。假如有一个函数 y = a * b，a 和 b 均为变量。那么 dy （y 的变化）其实是由 a 的变化 da ，以及 b 的变化 db所组成。因为 y = a * b，所以 da 会被放大 b 倍贡献到 dy，而 db 会被放大 a 倍贡献到 dy，综合起来就是 dy = a * db + b * da。假如 a = b = x，也就是 y = x * x = x ^ 2， 则有 dy = x * dx + x * dx = 2 * x * dx\n把 x 替换成 f(x), 所以：\nd_h(x) = 2 * f(x) * d_f(x)\nd_f(x) = dw * x\n--&gt;\ndw = d_h(x) / (2 * f(x)) / x\n\n有了这个关系，代入某个用例验证一下：\n待学习：\nh(x) = f(x) ^ 2\nf(x) = w * x\nw = 8\n---\n初始化：\nw = 2  # 随机\nlearning_rate = 0.4\n---\n10 个循环结果：\nout_true: 64.0000, out_guess:  4.0000, d_h_x: -60.0000, d_w: -15.0000, w: 17.0000\nout_true: 256.0000, out_guess:  1156.0000, d_h_x: 900.0000, d_w: 6.6176, w: 10.3824\nout_true: 576.0000, out_guess:  970.1393, d_h_x: 394.1393, d_w: 2.1090, w: 8.2733\nout_true: 1024.0000, out_guess:  1095.1677, d_h_x: 71.1677, d_w: 0.2688, w: 8.0045\nout_true: 1600.0000, out_guess:  1601.8065, d_h_x: 1.8065, d_w: 0.0045, w: 8.0000\nout_true: 2304.0000, out_guess:  2304.0007, d_h_x: 0.0007, d_w: 0.0000, w: 8.0000\nout_true: 3136.0000, out_guess:  3136.0000, d_h_x: 0.0000, d_w: 0.0000, w: 8.0000\nout_true: 4096.0000, out_guess:  4096.0000, d_h_x: 0.0000, d_w: 0.0000, w: 8.0000\nout_true: 5184.0000, out_guess:  5184.0000, d_h_x: 0.0000, d_w: 0.0000, w: 8.0000\n\nPython 代码在这里\n最终成功学习到 w = 8。\n我们可以总结一下，机器学习的函数和普通编程下的函数有两个不同点：\n\n可能带有待学习的参数 w\n除了能够正向计算结果，还需要反向计算误差（为了调整参数）\n\n只要我们的函数都满足这两点，并且能够这些函数组合起来，就能得到一个能够学习的程序。\n下面，我们来研究函数组合的问题。\n最简单的组合方式是：一个函数的输出是另一个函数的输入。这种情况我们已经通过上文的 h(x)  和 f(x) 无意中研究过。\n在编程视角下，更基本的组合方式是 if ... else ...。\n问题是这种逻辑控制语句，怎么计算和传播误差？\n首先，我们需要把它表示出来。\nif p(x):\n    return f(x)\nelse:\n    return h(x)\n\n然后进行数学化。\n非此即彼的 if else，在数学上，其实是 1 和 0.\n1 * f(x) + 0 * h(x) 就是 f(x)。\n0 * f(x) + 1 * h(x) 就是 h(x)。\n这个 1 和 0 的逻辑关系需要学习出来，其实就是变成参数：\nw1 * f(x) + w2 * h(x)\n\n接下来的问题是，p(x) 怎么和它们关联起来？\n其实细细想一下，这个 w1 和 w2 正是 p(x) 的输出结果。而且 w2 = 1 - w1\n于是我们只要保证 p(x) 的输出范围在 0 ~ 1，那么有：\nw = p(x)\noutput = w * f(x) + (1 - w) * h(x)\n\n这里需要注意的是，w 并不是直接学习得到的参数，而是 p(x) 的输出结果，我们并不是直接学习 w，而是学习一个 p(x) ，也就是学习 p(x) 内部的参数。为了不容易混淆，我把它换成 k:\nk = p(x)\noutput = k * f(x) + (1 - k) * h(x)\n\n大功接近告成。剩下的问题是怎么保证 p(x) 的输出落在 0 至 1 之间。\n很简单，套上一个值域在 0 至 1 之间的变换函数即可。\n这种函数有很多，比如可以自己构造一个 1 / (1 + f(x) ^ 2)。(这个函数的误差怎么反向传播，可以自己试试）\n至此，我们有了可以学习的 if ... else ... 控制语句。\n有了这个思路，其实查字典也可以数学化表示。\n一个字典，其实是 {k, v} 容器，查字典就是有一个 q, 当 q == k 时，返回对应的 v。\n在机器学习的世界里，(q, k, v) 都是数字。\n判断 q == k 的操作，表达为 q 和 k 的差别，比如说 q - k 的大小。于是有：\nd1 = q - k1\nd2 = q - k2\nd3 = q - k3\n...\n\n然后把 d1, d2, d3 ... 进行归一化操作。再把归一化后的结果作为权重 w，去提取 v，也就是 (1-w) * v (需要用 1 - w 是因为差异越小，提取权重越大）。\n归一化比较简单的方式是: \nw1 = d1 / (d1 + d2 + d3 + ... + dn)\nw2 = d2 / (d1 + d2 + d3 + ... + dn)\nw3 = d3 / (d1 + d2 + d3 + ... + dn)\n...\n\n我们现在可以总结一下：\n要使得一个程序能够变成机器学习程序，思路是把所有的操作变成数学公式表达，这个数学公式需要能够反向计算出误差是怎么传播的。\n范式如下：\n\n输入输出数据转换成数字\n控制操作转换成数学公式\n正向计算结果和误差\n反向根据误差更新参数\n\n在机器学习的世界中，一个操作既能正向计算结果，也能反向传播误差并更新参数。当我们把常用的操作封装起来，然后提供一些能组合这些操作的胶水操作，用户就可以像搭积木一样利用我们提供的操作原语 (primitive) 来搭建一个可以学习的程序，这个程序因为参数是未知的，而架构是已知的，所以叫模型。这个行为就是所谓的机器学习建模。\n搭建好的模型，通过大量灌入数据，调整模型参数，就是所谓机器学习训练。\n而本文提到的这种编程范式，有一个正式的名字，叫可微分编程。可微分，指的是这个数学操作可微，使得误差可以反向传播，从而使程序可以自我学习。\n\n后记：\n关于机器学习，这个领域网上有大量优秀的文章和教程，也有很多的细分领域和专业的术语。\n我尝试补充一个更基础、直观且具有启发性的角度。\n","id":"http://pypy.info/differentiable-programming/","title":"简明机器学习 - 可微分编程"},"http://pypy.info/rust-borrow/":{"body":"指针是万恶之源。\n你不拥有这块数据，你只是有一个指向这块数据的地址（数据引用）。如果数据被删了，被改了，你根本就不知道。换言之，你所依赖的这块数据并不安全。因为你担心别的代码对它动手脚。很多 bug 就是这么出现的，data race, dangling pointer，诸如此类。\n细想一下，数据的安全性主要由两个因素控制：\n\n共享性: 数据是否共享，是否存在多个引用？\n可变性: 数据是否允许被修改？\n\n换言之，一块数据之所以会不安全，是因为它同时满足了共享性和可变性。有这块数据引用的可能不止一个地方，而且都能修改这块数据，我们就开始担心别的引用会修改这块数据，破坏我的这块代码的假设。\n于是，要想得到数据安全，只需要：\n\n禁止数据共享: 不允许共享数据 (unsharable)\n禁止数据可变: 不允许修改数据 (immutable)\n\n禁止数据共享。这个好理解，如果这块数据是你独享的，只有你一个引用，那么别的代码不可能对它动手脚，数据是安全的。\n禁止数据可变。是函数式的思路，比如 Haskell，不允许有副作用，要想改就基于旧的创建一个新的，数据手递手传递。这样你依赖一个数据，就可以放心地假设它不会被别人悄悄地修改。比如依赖一个字典，可以肯定这个字典的 key-values 不会被悄悄地改掉。\nRust 保护数据安全的机制就是这两个思路的组合：如果你要允许一个引用修改数据，那么就不允许创建多个引用 (共享数据）。如果你要创建多个引用 (共享数据)，那么就不允许这些引用修改数据。\n官方文档对这个理念的表达是：\n\nAt any given time, you can have either one mutable reference or any number of immutable references.\n\n（值得注意的是，这是一个静态约束，即编译期就可以检查的保证）\n但凡事总有例外。\n有些场景下，这个规则是必须得破坏掉的，否则便实现不了所需要的功能。\n比如要实现一个共享 cache，程序的多个地方通过引用指向同一个 cache 对象来使用这个 cache。也就是说，共享 cache 的引用可能有多个（否则就称不上共享了）。\n而对一个 cache 的主要使用方式，其实就是读和写。先读一下，如果发现 cache miss，那么就去获取这个 miss 的数据，然后写回 cache。也就是说，cache 的引用必须支持修改数据。\n在共享 cache 这个场景下，我们既要能共享数据，又要能修改数据。既要共享性，也要可变性。上文提到的规则不适用了。\nRust 提供了另一个机制来处理这种场景。官方说法叫内部可变性(interior-mutability)。其实它的真正意思是：共享可变性(shared-mutability)。\n共享可变性在运行期，而不是编译期来保证数据安全。核心做法是使用 Cell 类型。\n(注：interior-mutability 是一个极其常见且重要的 pattern，阅读 Rust 开源代码时经常可以看到把可变的状态封装到一个 inner 数据结构的场景，\n而外层数据结构则提供基于 &amp;self 而不是 &amp;mut self 的 methods。这样就保证了用户使用这个数据结构时不是互斥的，增加了可用性。)\n总结一下：\n\nRust 引用有两种：共享性引用(&amp;)和可变性引用(&amp;mut)\n共享性引用和可变性引用在编译期互斥。要么有一个可变性引用(&amp;mut)，要么有任意数量的共享性引用(&amp;)，而不能同时有二者存在。\n共享性引用可以使用 Cell 类型 使其在运行时可变，以满足共享且可变的场景。\n\n\n后记：\n为了加深理解，可变性引用(&amp;mut) 可以理解成互斥性引用。它的 mut 其实可以理解为互斥锁 mutex 的 mut，而不是 mutable 的 mut。\n慢慢就会发现，Rust 中的 mut 关键字，基本上就是互斥的意思。\n","id":"http://pypy.info/rust-borrow/","title":"深入理解 Rust - References and Borrowing"},"http://pypy.info/rust-ownership/":{"body":"每个编程语言都有自己管理内存的方式。因为内存有限，原则是数据在使用的时候加载到内存，不需要使用的时候及时释放，避免内存被撑爆。\n较底层的语言比如 C  ，需要程序员手动管理内存。也就是手动申请内存，手动释放内存。\n较高级的语言比如 Python ，有所谓垃圾回收机制，无需用户手动管理内存，大为减轻程序员心智负担。\n而 Rust 比较独特，采用了一种叫 Ownership 的机制来管理内存。可以认为是一种半自动的内存管理方式。\n据说有不少程序员在理解 Ownership 机制时会遇到困难，其中不乏经验丰富的程序员。\n经验告诉我们，理解新事物出现困难，往往是成见太深。也就是说只要放轻松，回归到事情的原点来看待问题，就可以了。\n假如现在要实现一个自动管理内存的机制，比较自然的思路是看看这块内存有谁在使用，如果没有被使用，则表明这块内存可以被回收以便再次使用。这个思路大家称之为引用计数法，即当引用数为 0 时，可回收内存。比如：\na = Data()\nb = a\n\n此时，对数据 Data() 所占用的内存，有 2 个引用，分别是 a  和 b  。当 a 和 b 这两个变量退出作用域，那么数据 Data 所占用的内存引用数为 0，可以在恰当的时候被回收。(所谓变量退出作用域，大意是变量所在的作用域 (scope) 被关闭，比如函数返回)。\n引用计数这种行为会给程序带来额外的开销，因为运行时 (runtime) 需要一直去追踪每份数据到底有多少引用，并且对引用数为 0 的数据定时执行释放。\nRust 的思路是既然引用计数会带来额外开销，那就干脆不计数了。\n\n引用数永远为 1，可不可以？\n\n回到刚才的例子，\na = Data()  # 引用数 = 1 ，引用为 a \nb = a # 引用数 = 1 ，引用为 b， 且 a 不再合法 \n\n在 b = a 之后，a 不能再使用，因为引用数只能为 1，且对 Data() 的引用变成了 b。\n直观一点来看这个规则，Data() 就像有了一个 owner 一样，a = Data() 时，owner 是 a。\nb = a 后，owner 从 a 变成了 b，就像 Data() 从 a 转移 (move) 到了 b。\n有了这个规则之后，内存回收就变得简单了，当 owner 退出作用域时 (scope 关闭)，就可以回收内存。\n我认为，在写 Rust 程序的时候，保持一种数据在不同的变量之间移来移去的感觉是非常有帮助的。\n然而，问题还没完全解决。现实是复杂的，某些情况下，引用数就是需要有多个，不可能为 1。\n怎么办？\n\n引用计数啊！\n\nRust 的意思是，只有在需要的时候，才使用引用计数。Rust 提供了 Rc 和 Arc 两种 wrapper 来启用引用计数功能 (Arc 是线程安全版本的 Rc)。上面的例子可以写为:\nlet a = Rc::new(Data::new());\nlet b = a.clone();\n\n这时候，当 a 和 b 都不再使用时，Data 才会被销毁。\n引用计数的使用场景在并发共享数据的情况下极为常见，比如要开 n 个线程同时访问同一份数据，这时候便需要用 Arc 把数据包装起来，然后 .clone()  n 次得到 n 个 owner，再 move 到线程里边使用。大概的模式如下：\nlet n = 10;\nlet data = Arc::new(Data::new());  //开启引用计数\n\nfor i in 1..n {\n    let data_x = data.clone();  // 先 clone 一个 owner\n    thread::spawn(move || {\n        do_something(data_x);  // 将 data_x move 到线程内使用 \n    })\n}\n\n有了 Rc 和 Arc， 问题似乎得到了完美的解决。\n但是，这样做似乎很麻烦。因为多引用是一个极为常见的情况。有没有别的办法？\n引用计数，引用计数。能不能只引用，不计数？\n关键就在这里。引用之所以需要计数，是因为引用的新增和销毁行为是动态的，也就是说需要把程序跑起来才能知道，所以才需要一个动态的计数器来追踪这个动态的行为。\n反过来，如果引用的新增和销毁行为是静态的，也就是编译期就能知道，那么就不需要计数了。\n比如有数据引用 a，此后从 a 衍生出新引用 &amp;a，且静态分析得知 &amp;a 使用并销毁在 a 销毁之前，那么数据就可以只增加引用而不增加计数，因为从内存回收的角度，这个 &amp;a 的引用实际上就像没出现过一样。\n也就是说，编译时确保 &amp;a 的生命周期在 a 的生命周期以内，那么运行时只需要在 a 销毁的时候回收内存即可。\n直观感受一下：\n{\n    a = Data()\n    {\n        b = &amp;a  // &amp;a started\n        ... do something ...\n    }  // &amp;a ended\n}\n\n这就是 Rust 所谓的 Borrow 和 Lifetime 的概念。\n需要注意的是，Borrow 和 Lifetime 需要依赖编译期的静态分析，所以往往适用于顺序执行的情况。而在并发执行时，因为往往不知道哪个并发单元先执行完，需要使用动态的 Arc 来进行引用计数。\n\n总结：\n\n\nOwnership 机制是一种特殊的引用计数内存管理机制，计数永远为 1 。在写 Rust 程序的时候，保持一种数据在不同的变量之间移来移去的感觉是非常有帮助的.\n\n\nRust 同样支持常规的引用计数内存管理机制，Rc/Arc。在并发编程的时候经常会用到。\n\n\n此外，Rust 支持只增加引用不增加计数的机制，也就是 Borrow。这种机制需要依赖编译期的静态分析，以确保 Lifetime 的合法。\n\n\n严谨的细节和规范看文档就可以，带着上面的思路多写写，很容易找到感觉。\n","id":"http://pypy.info/rust-ownership/","title":"简明 Rust 指南 - 理解 Rust Ownership 机制"},"http://pypy.info/rust-parser-combinator/":{"body":"Show you the code\n古语有云，Talk is cheap. 在进行 cheap talk 之前，先放上代码。\n实现分两层，1. 通用 Parser Combinator 库 parcomb，2. 基于 parcomb 实现的 JSON parser。\n\nJSON Parser 实现 (基于 parcomb)\nparcomb 完整代码\n\n思路\n写 Parser 是熟悉一门编程语言很好的方式。虽说 Parsing 的技术林林总总，其实不需要太在意，我们可以从简单开始。\n一个 Parser 实则上是一个模式识别器 (Pattern Matching), 通过匹配输入数据中的模式，若匹配成功，返回一个值。\n最常见的 Parser 莫过于正则表达式 (Regex)。正则表达式的问题在于它只能识别线性的模式，换言之，它无法递归地进行模式识别。\n所以正则表达式一般用来匹配一些非结构化的字符串。一旦遇到结构化的字符串，比如 JSON 或程序语言，就无能为力了。\nJSON 是个递归嵌套结构，意思是它允许字典套字典，字典套数组，数组又套字典，等等。\n要识别这种递归结构的字符串，我们需要一个支持递归地识别的 Parser。这种 Parser 叫递归下降 (recursive descent) Parser。\nParser 叫什么并不重要。我们的重点在于 递归 二字。\n递归\n递归，是一种自然界的规则。它的意思有两层，1. 循环，2. 相似。自然界中大部分东西都符合递归法则，也就是分形，比如树和叶，山和石。\n有了递归，我们完全不需要 for/while 这种循环控制语句，就可以构造循环。只需要函数反复调用自己并更新调用参数即可。\n如果我们把 Parser 表达为一个函数，那么只要在 Parser 里调用其它的 Parser，就能实现支持递归地识别的 Parser。\n这意味着，我们的 Parser 完全可以通过组合其它的 Parser 得到。形如：\nParserA = ParserB + ParserC\nParserD = ParserE - ParserF\n...\n\n这也意味着，我们会有：1. 基本的 Parser,  2. Parser 胶水（基于基本 Parser 组合出复杂 Parser）\n这个 2. Parser 胶水， 正式名字叫 Parser Combinator\n理论就是这么简单，有意思的是用 Rust 去实现这些理论。\n因为 Rust 独特的语言特性，使得这个实现有了更多的乐趣。\n实现和设计\n我们先来定义 Parser。\n函数式的想法是最自然的：一个 Parser 就是一个函数。\n而 Parser Combinator，所谓的胶水，无非就是一种高阶函数：接受 Parser 作为输入，返回 Parser 作为输出（接受函数，返回函数）。\n下一步，我们只需要把 Parser 的函数签名(function signature) 固定下来，不同类型的 Parsers 就可以通过胶水自由组合，最终组合成一个具有特定业务目的的 Parser。\n而在 Rust 的语境下，我们不首先考虑函数作为抽象单元。我们用 Traits(接口) 做高层抽象。也就是说：\nParser 就是一个 Trait\n然后定义这个 Parser Trait 的行为和输入输出，如下：\npub type ParseResult&lt;I, O, E&gt; = Result&lt;(O, I), E&gt;;\n\npub trait Parser&lt;I, O, E&gt;\nwhere\n    I: ?Sized,\n{\n    fn parse&lt;'a&gt;(&amp;self, input: &amp;'a I) -&gt; ParseResult&lt;&amp;'a I, O, E&gt;;\n}\n\n\nparse 方法接受一个输入 &amp;I，若成功，则返回结果 O 及剩下未用完的 &amp;I，若出错，返回 E。\n值得注意的是，这几个 I, O, E 都是泛型 (Generic Types)。这意味着我们可以为这个 Parser Trait 提供各种各样的具体实现，去支持 str，bytes 等各种各样的 parse 需求。\n中间接口层一定，剩下的事情就好办了：\n\n往上走，使用这个接口, 实现高层逻辑，即：基于这个 Parser 接口去实现各种 Parser Combinators；\n往下走，实现这个接口, 提供底层逻辑，即：为各种各样的具体的类型去实现这个 Parser 接口。\n\n也就是依赖反转原则 Dependency inversion principle 的应用。\n向上实现：Parser Combinator\n对 Parser Combinator 的实现，我们首要考虑的是提供哪些胶水操作 (primitives)。\n正则表达式其实已经提供了很好的思路，and, or, *, + !, ? ...\n\nand 操作: p1 and p2，就是先使用 p1 来 parse，若成功，则使用 p2 来 parse，然后返回结果 (o1, o2) ;\nor 操作：p1 or p1，就是先尝试使用 p1 来 parse，若失败，则继续尝试 p2 ;\n* 操作：p1*, 就是连续使用 p1 来 parse 0 次到多次，直到失败。\n...\n\n剩下的我就不一一列举了，可以参考 PEG(Parsing Expression Grammar)。\nPEG 和 Regex 很像，区别在于 Regex 的基本元素是字符，组合的是字符，不能递归，而 PEG 的基本元素是 Parser，组合的是 Parser，可以递归。\n我们实现的话，不用太照本宣科，抓住关键，然后实现一些自己需要的操作即可。\nparcomb 的这些胶水操作，每个操作我都选择了用一个特定的类型 Struct 去表示和实现，然后为每个 Struct  都实现 Parser 这个 Trait，这样所有操作就满足了闭包性质，可以自由组合了。\n代码见: 这里\n这个实现过程其实有不少有意思地方。比如：\n\n\nParser Combinator 是选择静态地组合 Parser (impl Trait)，还是动态地组合 Parser (dyn Trait)？\n\n\nRust 支持为所有符合条件的函数/闭包自动实现 Parser Trait，方便使用。参考这里\n\n\nAccept interfaces, return structs 原则的再体会 (其实这个是当初写 Go 语言时学习到的一个原则)。因为 Rust 的类型系统和抽象特性更强大，这个原则对 Rust 甚至更加实用：This suggests that it makes sense to make the argument types of a function as general as possible and the return types as specific as possible。参考这里\n\n\n...\n\n\n实现一次 Parser Combinator，即可对 Rust 的核心语言特性 (Trait, Generic Type) 有很好的感觉。\n向下实现：String Parser\n我们的 Parser Trait 接口并没有规定输入类型是什么，这意味着可以按需实现接受各种各样输入的 Parser。如接受：str, [u8], ... 的 Parser。\n因为我的目标是一个 JSON Parser，所以我优先实现接受 str 为输入的 basic parsers。代码见: 这里\n所谓的 basic parsers，其实就是方便用户构造 parser 的一些函数，有了这些构造函数，用户就无需从头开始裸写 parser。\n比如 literal parser lit:\nlet par = lit(\"hello\"); // 生成一个 parse \"hello\" 的 parser\nlet inp = \"hello world\";\nlet res = par.parse(inp).unwrap();\nassert_eq!((format!(\"hello\"), \" world\"), res);\n\n甚至可以更通用一些，正则表达式 parser reg:\n\nlet par = reg(r\"\\d{2}\\w+\");  // 生成一个 parse r\"\\d{2}\\w+\" 这个正则表达式的 parser\nlet inp = \"19abcd$$\";\nlet res = par.parse(inp).unwrap();\nassert_eq!((format!(\"19abcd\"), \"$$\"), res);\n\n这里有意思的是，我们只要用 Parser Combinator 把这些 reg parsers 组合起来，就得到了一个支持递归的正则表达式引擎。\nJSON Parser\n对着 JSON 的 Schema，使用我们预设好的 String Parser 和 Parser Combinator，就可以描述性地定义出一个 JSON Parser。代码参见：这里\n这个 JSON Parser 的定义，其实也就 100 行代码左右。\n结语\n能够熟练地使用 Traits 和 Generic Data Types 进行程序设计和实现，应该就能够 Thinking in Rust 了。\n能够使用一个语言来思考，无论这个语言是自然语言的英语，抑或是程序语言的 Rust，那么就算掌握这门语言了吧！\n","id":"http://pypy.info/rust-parser-combinator/","title":"Rust 实战 - 从零编写 JSON Parser"},"http://pypy.info/rust-shared-mutability/":{"body":"Rust 的 reference 存在一条铁律：\n\nAt any given time, you can have either one mutable reference or any number of immutable references.\n\n翻译成中文就是：\n\n共享不可变，可变不共享。共享与可变性互斥。\n\n这条铁律带给了我们安全，同时也给我们带来了限制。\n试想，要实现 Graph 这种数据结构怎么办呢？一个 Node 可能被多个其它的 Node 所引用（共享），难道就不能修改这个 Node 的数据了吗（可变）？\n站在其他语言的角度，这是很荒谬的。\n值得注意的是，这个安全性约束是编译期的限制，当我们需要共享可变性时，需要放弃编译期的限制，而改用运行期的检查来保证数据安全。\n基本思路有 3 个：\n\n\n内部可变性: Rc&lt;RefCell&lt;T&gt;&gt;\n\n\n自建索引: HashMap&lt;K, V&gt;\n\n\n野生指针: Raw pointers\n\n\n1. 内部可变性: Rc&lt;RefCell&lt;T&gt;&gt;\n这个思路是标准答案，参考官方文档: Interior Mutability 内部可变性。\n原理就是内层使用 UnsafeCell 类型 来封装数据, 而 UnsafeCell 使用 raw pointers 和 unsafe 来绕过编译器限制。\n基于 UnsafeCell 类型，标准库封装出一系列的 Cell 类型，用户不需要直接和 unsafe 及 raw pointers 打交道，而改为调用 Cell 类型 的 API。\nRc&lt;RefCell&lt;T&gt;&gt; 是内部可变性的一个典型例子。用引用计数 Rc&lt;T&gt; 来实现共享，用 Cell 类型 RefCell&lt;T&gt; 来实现可变。\n之所以说这个例子典型，是因为共享的时候，ownership 往往也是很模糊的，所以使用 Rc 计数。(注：Rc&lt;RefCell&lt;T&gt;&gt; 的线程安全版本是 Arc&lt;Mutex&lt;T&gt;&gt;)\nInterior Mutability 的核心在于使用 Cell 类型。我们可以使用各种各样的 wrapper 封装 Cell 类型 实现共享可变。\n2. 自建索引: HashMap&lt;K, V&gt;\n这个思路其实更自然, 但没那么直接。\n试想，共享不可变其实是 Rust 针对 references 的限制。那么我们不用 references 就好了。\n潜台词是：要引用一个对象，不是一定要用 reference(&amp;) 的。key-value 的 key 不也是一种引用么？共享 key 可是没有限制。\n原理就是让一个可以索引的容器来存放(own)这些数据，然后用索引来访问它们。\n所以不仅仅是 HashMap, Vector 也是可以的，有索引 (index) 的都可以。\n而且 Ownership 的问题也通过中心化的容器解决了，容器 own 所有数据。\n这种方式，在实现 Graph 这种数据结构的时候是很舒服的。把节点和边都存放到容器，然后通过 index 来互相指向。避免了在有环的情况下，使用引用计数会出现内存泄露的问题。\n3. 野生指针: Raw pointers\n这不算一个思路了。强行绕开，注意安全便是。\n总结\n\n基本原则：共享不可变，可变不共享\n要想共享且可变，可以 Rc&lt;RefCell&lt;T&gt;&gt; 或 HashMap&lt;K, V&gt;。\n\n","id":"http://pypy.info/rust-shared-mutability/","title":"深入理解 Rust - 共享可变性"}},"docInfo":{"http://pypy.info/":{"body":0,"title":0},"http://pypy.info/differentiable-programming/":{"body":839,"title":0},"http://pypy.info/rust-borrow/":{"body":55,"title":3},"http://pypy.info/rust-ownership/":{"body":102,"title":3},"http://pypy.info/rust-parser-combinator/":{"body":259,"title":3},"http://pypy.info/rust-shared-mutability/":{"body":72,"title":1}},"length":6},"lang":"English"};